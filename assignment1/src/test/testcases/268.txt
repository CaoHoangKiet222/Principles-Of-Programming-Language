
        PARENT: function integer(i: integer) { return (i - 1) / 2; }

        LEFT: integer(i: integer) { return (2 * i + 1); }

        RIGHT: integer(i: integer) { return (2 * i + 2); }

        reheapUp: function void (maxHeap: array [100] of integer, numberOfElements: integer, index: integer)
        {
            if (index >= numberOfElements) {
                return;
            }
            if (index && maxHeap[PARENT(index)] < maxHeap[index]) {
                temp: integer = maxHeap[index];
                maxHeap[index] = maxHeap[PARENT(index)];
                maxHeap[PARENT(index)] = temp;
                reheapUp(maxHeap, numberOfElements, PARENT(index));
            }
        }
    